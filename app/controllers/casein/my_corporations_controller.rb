# Scaffolding generated by Casein v5.1.1.5

module Casein
  class MyCorporationsController < Casein::CaseinController
    include TargetModelFetching
    target_model :my_corporation

    before_action :needs_admin

    def index
      @my_corporations = MyCorporation.order(sort_order(:code)).paginate :page => params[:page]
    end
  
    def show
      @my_corporation = MyCorporation.find params[:id]
    end
  
    def new
      @my_corporation = MyCorporation.new
    end

    def create
      @my_corporation = MyCorporation.new my_corporation_params
    
      if @my_corporation.save
        flash[:notice] = I18n.t('messages.create_model', model_name: model.model_name.human)
        redirect_to casein_my_corporations_path
      else
        flash.now[:warning] = I18n.t('messages.failed_to_create', model_name: model.model_name.human)
        render :action => :new
      end
    end
  
    def update
      @my_corporation = MyCorporation.find params[:id]
    
      if @my_corporation.update_attributes my_corporation_params
        flash[:notice] = I18n.t('messages.update_model', model_name: model.model_name.human)
        redirect_to casein_my_corporations_path
      else
        flash.now[:warning] = I18n.t('messages.failed_to_update', model_name: model.model_name.human)
        render :action => :show
      end
    end
 
    def destroy
      @my_corporation = MyCorporation.find params[:id]

      @my_corporation.destroy
      flash[:notice] = I18n.t('messages.destroy_model', model_name: model.model_name.human)
      redirect_to casein_my_corporations_path
    end
  
    private
      
      def my_corporation_params
        params.require(:my_corporation).permit(:code, :name)
      end

  end
end
